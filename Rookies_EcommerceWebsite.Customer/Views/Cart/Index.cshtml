@using Dtos.Response
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    GetListCartResponse[] carts = ViewData["Carts"] as GetListCartResponse[];
}
@model Rookies_EcommerceWebsite.Customer.Models.ViewModels.InvoiceViewModel



        
<div class="container-fluid mt-5">
    <div class="row mx-2">
        <div class="col-7">
            <div class="table-responsive">
                <table class="table align-middle">
                    <thead>
                        <tr>
                            <th scope="col" >#</th>
                            <th scope="col" >Item</th>
                            <th scope="col" >Name</th>
                            <th scope="col" >Amount</th>
                            <th scope="col" >Price</th>
                            <th scope="col" >Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if(carts != null && carts.Length != 0)
                        {
                            @for(int i = 0; i < carts.Length; i++)
                            {
                                <input form="createCart" name="invoiceVariants[@i].CartId" value="@carts[i].Id" />
                                <input form="createCart" name="invoiceVariants[@i].VariantId" value="@carts[i].VariantId" />
                                <tr>
                                    <th scope="row">@(i+1)</th>
                                    <td >
                                        <img src="@carts[i].Variant.Product.Images[0]" style="width: 50px" />
                                    </td>
                                    <td >
                                            <p>@carts[i].Variant.Product.Name</p>
                                            <p>Variant: @carts[i].Variant.Name</p>
                                    </td>
                                        <td>

                                        <input form="createCart" type="number" name="invoiceVariants[@i].Amount" class="form-control input-number text-center" value="@carts[i].Amount" min="1" max="10">
                                                
                                        </td>
                                        <td>@carts[i].TotalCost.ToString("n0") đ</td>
                                    <td>
                                            @using (Html.BeginForm("RemoveCart", "Cart", FormMethod.Post))
                                            {
                                                @Html.Hidden("id", carts[i].Id)
                                                <input type="submit" class="btn btn-close" value="" aria-label="Close" />
                                            }
                                    </td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="6" class="text-center">No data</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col">
            @using (Html.BeginForm("Create", "Invoice", FormMethod.Post, new { id="createCart" }))
            {

                <div class="form-group">
                    @Html.LabelFor(model => model.Email)
                    @Html.EditorFor(model => model.Email, new
                        {
                            htmlAttributes = new { @class = "form-control" }
                        })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Name)
                    @Html.EditorFor(model => model.Name, new
                        {
                            htmlAttributes = new { @class = "form-control" }
                        })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Address)
                    @Html.EditorFor(model => model.Address, new
                    {
                    htmlAttributes = new { @class = "form-control" }
                    })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNumber)
                    @Html.EditorFor(model => model.PhoneNumber, new
                        {
                            htmlAttributes = new { @class = "form-control" }
                        })
                </div>
                <div class="card">
                    <div class="card-body">
                        <h3>Cart information</h3>
                        <hr/>
                        <div class="cart-info">
                            <div class="cart-info-txt">
                                <p>
                                    You are having @((carts is not null) ? @carts.Count() : 0) product(s) in your cart
                                </p>
                                <div class="d-flex justify-content-between">
                                    <span>Thành tiền:</span> <strong>@((carts is not null) ? @carts.Sum(u => (long)u.TotalCost).ToString("n0") : 0) đ</strong>
                                </div>
                            </div>
                            
                        </div>
                        <hr/>
                        <button type="submit" class="btn btn-primary w-100">Submit</button>
                    </div>
                </div>
            } 
        </div>
    </div>
</div>
